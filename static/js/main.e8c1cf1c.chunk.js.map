{"version":3,"sources":["pages/Assets/linkedinpicture.png","pages/Assets/resume.PDF","pages/Home.jsx","pages/Contact.jsx","pages/Resume.jsx","components/Nav.jsx","components/ProjectCard.jsx","pages/Projects.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","id","src","picture","alt","href","target","Contact","Resume","resume","width","height","Nav","props","Fragment","currentPage","to","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","ProjectCard","name","image","repo","link","Projects","state","projects","this","map","project","key","Component","App","useEffect","axios","get","then","response","console","log","data","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e8c1cf1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedinpicture.25021d63.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.71d66150.PDF\";","import React from 'react';\r\nimport picture from \"./Assets/linkedinpicture.png\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"container\" id=\"Me\">\r\n        <div className=\"row-just-content-md-center\">\r\n            <div className = \"col-md-12\">\r\n                <h1>About Me</h1>\r\n                <hr />\r\n            </div>\r\n                <div className =\"col-md-12\">\r\n                <img src={picture} alt=\" Brian in the Galapagos\" className=\"picture\"></img>\r\n                <p> My name is Brian Warner, and I am currently beginning my career in the area of coding and web development.  I was born and raised in Atlanta and proceeded to receive my degree in political science from Amherst College.  From then on I primarily worked in the area of fine dining and front of house management.  I currently have my compTIA certifications in A+, Network+, and Security+ and working through Georgia Tech's full-stack web development and coding bootcamp.</p>\r\n\r\n                 <p> <a href= \"https://www.linkedin.com/in/brian-warner-60712541/\" target = \"_blank\">My LinkedIN Profile</a></p><p><a href= \"https://github.com/brw1820\" target = \"_blank\">My Github Profile</a></p> \r\n                <hr></hr>      \r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n<main>\r\n<div className=\"container\" id=\"Contact\">\r\n    <h2>Contact Information</h2>\r\n    <hr />\r\n  <div className=\"row\">\r\n    <div className=\"column\">\r\n        <label>Phone: 404-388-6098</label>\r\n        <div>\r\n        <label>E-Mail: Brw1820@gmail.com</label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</main>\r\n <footer className=\"footer1\">\r\n  <h2>© Copyright</h2>\r\n</footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport resume from \"./Assets/resume.PDF\";\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div>\r\n        <h1>Résumé</h1>\r\n        <hr />\r\n          <div className=\"row\">  \r\n           <div className='col-sm-12'>\r\n             <p>\r\n              <embed src={resume} width=\"800\" height=\"2100\"></embed>\r\n             </p>\r\n            </div>\r\n          </div>\r\n          </div>\r\n    );\r\n};\r\n\r\nexport default Resume;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <React.Fragment>\r\n        <ul className=\"nav nav-tabs\">\r\n      <li className=\"nav-item\">\r\n        <Link className={props.currentPage === \"Home\" ? \"nav-link active\" : \"nav-link\"} to=\"/\">\r\n          Home\r\n       </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n          <Link className={props.currentPage === \"Contact\" ? \"nav-link active\" : \"nav-link\"} to=\"/contact\">\r\n          Contact\r\n          </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n          <Link className={props.currentPage === \"Resume\" ? \"nav-link active\" : \"nav-link\"} to=\"/resume\">\r\n          Resume\r\n      </Link>\r\n</li>\r\n<li className=\"nav-item\">\r\n          <Link className={props.currentPage === \"Projects\" ? \"nav-link active\" : \"nav-link\"} to=\"/projects\">\r\n          Projects\r\n      </Link>\r\n</li>\r\n    </ul>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                <a className=\"dropdown-item\" href=\"./Portfolio.html\">Résumé</a>\r\n                <a className=\"dropdown-item\" href=\"./contact.html\">Contact</a>\r\n                <a className=\"dropdown-item\" href=\"./index.html\">About Me</a>\r\n              </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nconst ProjectCard = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>Project Name:</strong> {props.name}\r\n          </li>\r\n          <li>\r\n            <strong>Github Repository:</strong> {props.repo}\r\n          </li>\r\n          <li>\r\n            <strong>Deployed Link:</strong> {props.link}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import ProjectCard from \"../../src/components/ProjectCard\";\r\nimport projects from './projects.json'\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n    state = {\r\n        projects\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.state.projects.map(project => (\r\n              <ProjectCard\r\n                id={project.id}\r\n                key={project.id}\r\n                name={project.name}\r\n                image={project.image}\r\n                repo={project.repo}\r\n                link={project.link}\r\n              />\r\n            ))}\r\n       </div> );\r\n        \r\n    }\r\n}\r\n\r\nexport default Projects;","import React, {useEffect} from 'react';\n// import SiteContainer from \"./components/SiteContainer\";\nimport axios from \"axios\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from \"../src/pages/Home.jsx\";\nimport Contact from '../src/pages/Contact.jsx';\nimport Resume from '../src/pages/Resume.jsx';\nimport \"../src/pages/Assets/style.css\";\nimport Nav from \"../src/components/Nav.jsx\";\nimport Projects from \"../src/pages/Projects.jsx\"\n\n// const App = () => <SiteContainer />;\n\nfunction App() {\n  useEffect(()  =>  {\n    axios.get(\"/api/config\").then(response => {\n      console.log(response.data)\n    })\n}, [])\nreturn (\n  <Router>\n    <Nav />\n    <Switch>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/contact\" component={Contact}/>\n      {/* <Route exact path=\"/about\" component={About}/> */}\n      <Route exact path=\"/resume\" component={Resume}/>\n      <Route exact path=\"/projects\" component={Projects}/>\n    </Switch>\n  </Router>\n);\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}